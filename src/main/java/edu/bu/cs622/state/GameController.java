package edu.bu.cs622.state;

import edu.bu.cs622.mode.Mode;
import edu.bu.cs622.path.Path;
import edu.bu.cs622.path.Step;
import java.util.List;

/**
 * This is the GameController class implements Mode interface to realize Delegation Pattern.
 * This class is responsible for representing a GameController.
 * 
 * <p>Ref: https://java-design-patterns.com/patterns/delegation/#programmatic-example-of-delegation-pattern-in-java
 */
public class GameController implements Mode {

  private final Mode mode;

  /**
   * Create the GameController object.
   * 
   * @param mode Crate the GameController with the given game mode
   */
  public GameController(Mode mode) {
    this.mode = mode;
  }

  /**
   * Validate the user-selected path against the game-generated one 
   * based on the different modes of the game.
   * 
   * @param gamePath The random path generated by the game
   * @param userPath The user input path
   * @return Return true if the user input path is the same as the game generated
   */
  @Override
  public boolean validatePath(Path gamePath, Path userPath) {
    List<Step> gameSteps = gamePath.getSteps();
    List<Step> userSteps = userPath.getSteps();

    if (gameSteps.size() != userSteps.size()) {
      return false;
    }

    return mode.validatePath(gamePath, userPath);
  }

}
